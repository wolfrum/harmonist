# Generated by Django 5.1.7 on 2025-04-08 13:23

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('spotify_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('popularity', models.IntegerField(blank=True, null=True)),
                ('followers', models.IntegerField(blank=True, null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('uri', models.CharField(blank=True, max_length=100, null=True)),
                ('last_synced_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('spotify_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('release_date', models.CharField(blank=True, max_length=32, null=True)),
                ('cover_url', models.URLField(blank=True, null=True)),
                ('artists', models.ManyToManyField(related_name='albums', to='core.artist')),
            ],
        ),
        migrations.CreateModel(
            name='ArtistAdminNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_notes', to='core.artist')),
            ],
        ),
        migrations.CreateModel(
            name='ArtistAlias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_used', models.CharField(max_length=200)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliases', to='core.artist')),
            ],
        ),
        migrations.CreateModel(
            name='ArtistFanNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fan_notes', to='core.artist')),
            ],
        ),
        migrations.CreateModel(
            name='ArtistInfluence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True)),
                ('from_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='influences', to='core.artist')),
                ('to_artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='influenced_by', to='core.artist')),
            ],
            options={
                'unique_together': {('from_artist', 'to_artist')},
            },
        ),
        migrations.CreateModel(
            name='ArtistInfluenceLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('influence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='core.artistinfluence')),
            ],
        ),
        migrations.CreateModel(
            name='ArtistListening',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True)),
                ('listener', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listens_to', to='core.artist')),
                ('listening_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listened_by', to='core.artist')),
            ],
            options={
                'unique_together': {('listener', 'listening_to')},
            },
        ),
        migrations.CreateModel(
            name='ArtistListeningLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('listening', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='core.artistlistening')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subgenres', to='core.genre')),
            ],
        ),
        migrations.AddField(
            model_name='artist',
            name='genres',
            field=models.ManyToManyField(blank=True, related_name='artists', to='core.genre'),
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('spotify_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('duration_ms', models.IntegerField(blank=True, null=True)),
                ('track_number', models.IntegerField(blank=True, null=True)),
                ('disc_number', models.IntegerField(blank=True, null=True)),
                ('explicit', models.BooleanField(default=False)),
                ('uri', models.CharField(blank=True, max_length=100, null=True)),
                ('preview_url', models.URLField(blank=True, null=True)),
                ('external_url', models.URLField(blank=True, null=True)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='core.album')),
            ],
        ),
        migrations.CreateModel(
            name='ArtistMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True)),
                ('joined_on', models.DateField(blank=True, null=True)),
                ('left_on', models.DateField(blank=True, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='core.artist')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='core.artist')),
            ],
            options={
                'unique_together': {('member', 'group')},
            },
        ),
    ]
